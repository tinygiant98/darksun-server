
services:
    nwserver:
        hostname: nwserver
        container_name: nwserver
        image: ${NWSERVER_IMAGE}:${NWSERVER_TAG}
        env_file: ./config/nwserver.env
        restart: unless-stopped
        stdin_open: true
        tty: true
        volumes:
            - ./logs:/nwn/run/logs.0
            - ./:/nwn/home
            - ./logs:/nwn/data/bin/linux-x86/logs.0
        ports:
#            - '5122:5122/udp'
            - "${NWN_PORT:-5121}:${NWN_PORT:-5121}/udp"
        profiles:
            - nwserver
            - nwnxee

#    nwsync:
#        hostname: nwsync
#        container_name: nwsync
#        image: nginx:1-alpine
#        depends_on:
#            loophole:
#                condition: service_healthy
#        ports:
#            - ${NWSYNC_PORT}:80
#        volumes:
#            - ./nwsync:/usr/share/nginx/html
#        profiles:
#            - nwsync

#    loophole:
#        hostname: loophole
#        container_name: loophole
#        image: ${LOOPHOLE_IMAGE}:${LOOPHOLE_TAG}
#        command: ["sh", "c", "loophole http ${NWSYNC_PORT} --hostname ${NWN_NWSYNCHOST}"]
#        healthcheck:
#            test: ["CMD", "curl", "-f", "http://localhost:${NWSYNC_PORT}"]
#            interval: 30s
#            timeout: 10s
#            retries: 3
#        restart: always
#        volumes:
#            - ${USERPROFILE}/.loophole:/root/.loophole
#        profiles:
#            - loophole

#    influxdb:
#        container_name: influxdb
#        hostname: influxdb
#        image: influxdb:1.8
#        restart: unless-stopped
#        env_file: ./config/influxdb.env
#        volumes:
#            - influxdb:/var/lib/influxdb
#        ports:
#            - 8086:8086
#        profiles:
#            - influxdb
#            - profiling
#
#    grafana:
#        hostname: ds-grafana
#        container_name: ds-grafana
#        image: grafana/grafana:latest
#        restart: unless-stopped
#        depends_on:
#            - influxdb
#        env_file: ./config/grafana.env
#        volumes:
#            - ./grafana-provisioning:/etc/grafana/provisioning
#            - grafana:/var/lib/grafana
#        ports:
#            - 3000:3000
#        profiles:
#            - grafana
#            - profiling

    #db:
    #    hostname: db
    #    containter_name: db
    #    image: ${db_image}
    #    # etc
    #    profiles:
    #        - mysql
    #        - postgre
    #        - mariadb
    #        - sqlite
    #        - db

#    website:
#        hostname: website
#        container_name: website
#        image: nginx:1-alpine
#        depends_on:
#            - loophole
#        ports:
#            - ${NWSYNC_PORT}:80  # PORT?
#        volumes:
#            - ./website:/usr/share/nginx/html
#        profiles:
#            - website

#    redis-server:
#        image: redis:alpine
#        restart: unless-stopped
#        ports:
#            - "6379:6379"
#        command: redis-server --save 20 1 --loglevel warning --notify-keyspace-events Ex
#        volumes:
#            - ${PWD}/data:/var/lib/redis
#            - ${PWD}/config/redis.conf:/usr/local/etc/redis/redis.conf
#        environment:
#            - REDIS_REPLICATION_MODE=master
#        profiles:
#            - redis
#
#    redis-modules:
#        image: redislabs/redismod
#        ports:
#            - "6379:6379"
#        volumes:
#            - ${PWD-.}/database:/data
#        entrypoint: >
#            redis-server
#                --loadmodule /usr/lib/redis/modules/rejson.so
#        restart: unless-stopped
#        deploy:
#            replicas: 1
#        profiles:
#            - redis

#networks:
#    nwstack:
